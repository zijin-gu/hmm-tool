%------------------------------------------------------------------------------
% 
%                       %%%%%%%%%%%%
%                       % Probsimb %
%                       %%%%%%%%%%%%
% 
% This function caluclates the probability to have the vector of the observation O generated by each state of the HMM. We suppose dfp Gaussian.
% 
% 	function [PS,Psk]=probsimb(B,Med,Var,O,agrup)
% 
% Entry:	B{Np}{N}(Ngauss{ip},1) is a structure with the weight of each Gaussian for each state and to obtain each parameter.
% 
% Med: Med{Np}{N}(Ngauss(ip),agrup(ip+1)-agrup(ip)) is the mean for each Gaussian in each state and for each gathering of parameters
% 
% Var: Var{Np}{N}(Ngauss(ip),agrup(ip+1)-agrup(ip)) is the variance for each Gaussian in each state and for each gathering of parameters
% 
% O is a matrix with the sequence to estimate.
% 
% agrup(Np+1,1) defines how to cluster the parameters together
% 
% Results:	PS(N,1): Probability of the vector of the observations O in the state ie.
% 		
% 		Psk{Np}{N}(Ngauss{ip},1): Normalizad probability  of the vector of the observations O in the state ieusing the symbol k. 
% 		
% Normalizing the data, we have: sum(Psk(i,M*d+1:M*d+M))=1 for d=0,1,...,Dim-1
% 
%-------------------------------------------------------------------------------
function [PS,Psk]=probsimb(B,Med,Var,O,agrup)


% Variables of the hmm.

Np=size(B,1);
Ngauss=zeros(Np,1);
for ip=1:Np
   Ngauss(ip)=size(B{ip}{1},1);
end
Ne=size(B{1},1);

% Probability of the vector of the observations O in the state ie.
PS=zeros(Ne,1);
% Part of the Gaussian igauss to the probability of the parameter ip in the state ie
% for the observation O -> Psk{ip}(ie,igauss).
% The output is normalized with sum(PSk')'=1.
Psk=cell(Np,1);
for ip=1:Np
   Psk{ip}=cell(Ne,1);
   for ie=1:Ne
      Psk{ip}{ie}=zeros(Ngauss(ip),1);
   end
end

% Calcul of the probability for each parameter, Gaussian and state in the same loop.
% We calculate the probability in each state:
% First we sum the probabilities from each Gausssian in the variable `prob.
% And, then multiplicate it with the probabilities of each parameter,
prob=zeros(Np,Ne);
for ie=1:Ne,
   for ip=1:Np
      dimp=[agrup(ip):agrup(ip+1)-1];
      
      cte=(ones(Ngauss(ip),1)*O(dimp)-Med{ip}{ie})./Var{ip}{ie};
      cte=exp(-(cte.*cte)/2);
      % if the variable is dicrete (variance about 0)
      % we make this change in order to take it into account loke a discrete variable
      Var{ip}{ie}(find(Var{ip}{ie}<1e-3))=1/sqrt(2*pi);
      Psk{ip}{ie}=B{ip}{ie}.*prod(cte./Var{ip}{ie}/sqrt(2*pi),2)+realmin;

      
      
      % The previous part arounds the pdf probability and thus, it could be
      % a probability greater than 1.
      % A better estimation is the following one but is much longer. 
      cte=zeros(Ngauss(ip),length(dimp));
%       ctesup=zeros(Ngauss(ip),length(dimp));cteinf=ctesup;
%       for idimp=1:length(dimp)
%           ctesup(:,idimp)=normpdf(O(dimp(idimp))+Var{ip}{ie}(:,idimp)/20,Med{ip}{ie}(:,idimp),Var{ip}{ie}(:,idimp));
%           cteinf(:,idimp)=normpdf(O(dimp(idimp))-Var{ip}{ie}(:,idimp)/20,Med{ip}{ie}(:,idimp),Var{ip}{ie}(:,idimp));
%           cte(:,idimp)=normpdf(O(dimp(idimp)),Med{ip}{ie}(:,idimp),Var{ip}{ie}(:,idimp));
%           cte(:,idimp)=((ctesup(:,idimp)+cteinf(:,idimp))./2+cte(:,idimp)).*Var{ip}{ie}(:,idimp)/20;
%       end 
%       Psk{ip}{ie}=B{ip}{ie}.*prod(cte,2)+realmin;
      
      prob(ip,ie)=sum(Psk{ip}{ie});
      % normalized Psk to have sum(Psk{ip}{ie}})=1;
      Psk{ip}{ie}=Psk{ip}{ie}./prob(ip,ie);
  
end
end
% calcul of the PS in each state
PS=prod(prob,1)'+realmin;
return